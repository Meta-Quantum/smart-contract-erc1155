{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xbD5cd6F94F24228Af0310E48AeD50d9057ee2fC5",
      "txHash": "0x4f9a6fb16b7941ee3ddbe9aa4ab85d84e0f4a507e8f158f947dc77abc0dcd0e1",
      "kind": "uups"
    },
    {
      "address": "0xc72D94B1b7CFAB4697A426cb99D977a0EbeBBbF5",
      "txHash": "0xc4df66a850eae236c9610040b4d9b13d9389e49c7fc5d16194568e88e19b9616",
      "kind": "uups"
    }
  ],
  "impls": {
    "64b6bb9ea79f6389488be4a7e30c68b0f3fe8caaeceb6249b9861ed74934f3ae": {
      "address": "0x2693FFC8F6b00F0C582768094E49FA042d6216Ff",
      "txHash": "0x3f451f5d0bd6eccdccb8cd06dada21362925479f4af74f5e9e013ff5845c8d4a",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_revertMsg",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "AccessControlMixin",
            "src": "contracts\\common\\AccessControlMixin.sol:18"
          },
          {
            "label": "domainSeperator",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "EIP712Base",
            "src": "contracts\\common\\EIP712Base.sol:28"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeMetaTransaction",
            "src": "contracts\\common\\NativeMetaTransaction.sol:28"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)9536_storage)dyn_storage)",
            "contract": "AbstractRoyalties",
            "src": "contracts\\rarible\\impl\\AbstractRoyalties.sol:15"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "MetaQuantumERC1155",
            "src": "contracts\\MetaQuantumERC1155.sol:66"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "356",
            "type": "t_string_storage",
            "contract": "MetaQuantumERC1155",
            "src": "contracts\\MetaQuantumERC1155.sol:68"
          },
          {
            "label": "CONTRACT_URI",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "MetaQuantumERC1155",
            "src": "contracts\\MetaQuantumERC1155.sol:70"
          },
          {
            "label": "MAX_TOTAL_SUPPLY",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "MetaQuantumERC1155",
            "src": "contracts\\MetaQuantumERC1155.sol:72"
          },
          {
            "label": "MAX_TOKEN_ID",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "MetaQuantumERC1155",
            "src": "contracts\\MetaQuantumERC1155.sol:74"
          },
          {
            "label": "ipfsHashPerTokenId",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MetaQuantumERC1155",
            "src": "contracts\\MetaQuantumERC1155.sol:76"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(Counter)2768_storage",
            "contract": "MetaQuantumERC1155",
            "src": "contracts\\MetaQuantumERC1155.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Part)9536_storage)dyn_storage": {
            "label": "struct LibPart.Part[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)9536_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2768_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Part)9536_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
